

{
  "entities": {
    "Content": {
      "title": "Content",
      "description": "Represents any piece of content in the application, such as a level, semester, subject, folder, or file.",
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the content item." },
        "name": { "type": "string", "description": "Display name of the content item." },
        "type": { "type": "string", "enum": ["LEVEL", "SEMESTER", "SUBJECT", "FOLDER", "FILE", "LINK", "INTERACTIVE_QUIZ", "INTERACTIVE_EXAM", "INTERACTIVE_FLASHCARD"], "description": "The type of content." },
        "parentId": { "type": "string", "description": "The ID of the parent item. Null for top-level items." },
        "order": { "type": "number", "description": "The order of the item within its parent." },
        "createdAt": { "type": "string", "format": "date-time", "description": "Timestamp when the item was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "Timestamp when the item was last updated." },
        "iconName": { "type": "string", "description": "Name of the Lucide icon for subjects." },
        "color": { "type": "string", "description": "Tailwind color class for subject icons." },
        "metadata": {
          "type": "object",
          "properties": {
            "size": { "type": "number", "description": "File size in bytes." },
            "mime": { "type": "string", "description": "MIME type of the file." },
            "storagePath": { "type": "string", "description": "Path to the file in Firebase Cloud Storage." },
            "sourceFileId": { "type": "string", "description": "The ID of the original source file for generated content." },
            "quizData": { "type": "string", "description": "JSON string containing the data for an interactive quiz." },
            "isHidden": { "type": "boolean", "description": "Whether the content is hidden from non-admins." }
          }
        }
      },
      "required": ["id", "name", "type", "parentId", "order", "createdAt", "updatedAt"]
    },
    "UserProfile": {
      "title": "User Profile",
      "description": "Represents a user's profile information, including their role.",
      "type": "object",
      "properties": {
        "uid": { "type": "string" },
        "username": { "type": "string", "description": "Unique, user-chosen username." },
        "studentId": { "type": "string", "description": "The user's verified university student ID." },
        "email": { "type": "string", "format": "email" },
        "displayName": { "type": "string" },
        "photoURL": { "type": "string", "format": "uri" },
        "createdAt": { "type": "string", "format": "date-time"},
        "isBlocked": { "type": "boolean", "description": "Whether the user account is blocked." },
        "level": { "type": "string", "description": "The academic level of the user." },
        "roles": {
          "type": "array",
          "description": "An array of roles and permissions assigned to the user.",
          "items": {
            "type": "object",
            "properties": {
              "role": { "type": "string", "enum": ["superAdmin", "subAdmin"], "description": "The role of the user." },
              "scope": { "type": "string", "enum": ["global", "level", "semester", "subject", "folder"], "description": "The scope of the sub-admin's permissions (e.g., a specific level ID)." },
              "scopeId": { "type": "string", "description": "The ID of the item the permission applies to." },
              "scopeName": { "type": "string", "description": "The display name of the scope item." },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "canAddClass",
                    "canAddFolder",
                    "canUploadFile",
                    "canAddLink",
                    "canCreateFlashcard",
                    "canRename",
                    "canDelete",
                    "canMove",
                    "canCopy",
                    "canChangeIcon",
                    "canToggleVisibility",
                    "canUpdateFile",
                    "canCreateQuestions",
                    "canAccessQuestionCreator",
                    "canAccessAdminPanel",
                    "canReorder",
                    "canAdministerExams",
                    "canAdministerFlashcards"
                  ]
                }
              }
            },
            "required": ["role", "scope"]
          }
        }
      },
      "required": ["uid", "studentId", "createdAt"]
    },
    "QuestionSet": {
      "title": "Question Set",
      "description": "Represents a set of questions generated by the AI.",
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the question set." },
        "userId": { "type": "string", "description": "The ID of the user who owns this set." },
        "fileName": { "type": "string", "description": "The name of the source file for the questions." },
        "textQuestions": { "type": "string", "description": "The questions in plain text format." },
        "jsonQuestions": { "type": "string", "description": "The questions in JSON format." },
        "textExam": { "type": "string", "description": "The exam questions in plain text format." },
        "jsonExam": { "type": "string", "description": "The exam questions in JSON format." },
        "textFlashcard": { "type": "string", "description": "The flashcard questions in plain text format." },
        "jsonFlashcard": { "type": "string", "description": "The flashcard questions in JSON format." },
        "createdAt": { "type": "string", "format": "date-time", "description": "Timestamp when the set was created." },
        "sourceFileId": { "type": "string", "description": "The ID of the original source file." },
        "order": { "type": "number", "description": "The display order of the question set." }
      },
      "required": ["id", "userId", "fileName", "textQuestions", "jsonQuestions", "createdAt", "sourceFileId", "order"]
    },
    "ClaimedStudentId": {
      "title": "Claimed Student ID",
      "description": "A record to show that a student ID has been claimed by a user.",
      "type": "object",
      "properties": {
        "userId": { "type": "string", "description": "The UID of the user who claimed this ID." },
        "claimedAt": { "type": "string", "format": "date-time", "description": "Timestamp when the ID was claimed." }
      },
      "required": ["userId", "claimedAt"]
    },
    "AuditLog": {
        "title": "Audit Log",
        "description": "Represents a log of an administrative action.",
        "type": "object",
        "properties": {
            "id": { "type": "string" },
            "timestamp": { "type": "string", "format": "date-time" },
            "actorId": { "type": "string", "description": "UID of the user who performed the action." },
            "actorName": { "type": "string", "description": "Display name of the actor." },
            "action": { "type": "string", "description": "The action performed (e.g., 'user.block', 'user.promote')." },
            "targetId": { "type": "string", "description": "UID of the user who was the target of the action." },
            "targetName": { "type": "string", "description": "Display name of the target." },
            "details": {
                "type": "object",
                "description": "Additional details about the action.",
                 "properties": {
                    "from": { "type": "string" },
                    "to": { "type": "string" }
                }
            }
        },
        "required": ["id", "timestamp", "actorId", "actorName", "action", "targetId", "targetName"]
    }
  },
  "auth": {
    "providers": ["anonymous"]
  },
  "firestore": {
    "/content/{contentId}": {
      "schema": { "$ref": "#/entities/Content" },
      "description": "Stores all content items in a flat structure."
    },
    "/users/{userId}": {
      "schema": { "$ref": "#/entities/UserProfile" },
      "description": "Stores user profile information."
    },
    "/users/{userId}/questionSets/{questionSetId}": {
        "schema": { "$ref": "#/entities/QuestionSet" },
        "description": "Stores user-specific generated question sets."
    },
    "/claimedStudentIds/{studentId}": {
        "schema": { "$ref": "#/entities/ClaimedStudentId" },
        "description": "Stores a record of student IDs that have been linked to an account to ensure uniqueness."
    },
    "/auditLogs/{logId}": {
        "schema": { "$ref": "#/entities/AuditLog" },
        "description": "Stores a log of all administrative actions."
    }
  }
}
